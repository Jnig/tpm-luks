#!/bin/bash -e
#
# tpm-luks-update: For each entry in the config file, run the script to
#		   regenerate its PCR values, then run tpm-luks to migrate
#		   its secret to a new NVRAM index sealed to the new PCRs
#
CONF=/etc/tpm-luks.conf
NVPERMSFILE=$(mktemp /tmp/${0##*/}-XXXXXX)
REPLACE=0
OWNERPASS=""

function usage
{
        echo "usage ${0##*/}: [-r] [-y]"
        echo -e "  -r                replace the current used TPM NVRAM index with the new pcr values"
        echo -e "  -y                use the well known secret (all zeroes) as the owner password."
        echo -e "                     This will apply both to the NV define and NV write operations"
        echo -e "                     if they apply, as well as NV read."
        echo -e "  -h                help"

}

while getopts "r" opt; do
        case $opt in
        r)
		REPLACE=1
		;;
	y)
		OWNERPASS="-y"
		;;
        *)
                usage
                exit 255
                ;;
        esac
done

function cleanup
{
	rm -f ${NVPERMSFILE}
}

trap cleanup EXIT

DEVICES=( $(cat ${CONF} | awk -F: '! /^#/ {print $1}') )
INDEXES=( $(cat ${CONF} | awk -F: '! /^#/ {print $2}') )
SCRIPTS=( $(cat ${CONF} | awk -F: '! /^#/ {print $3}') )

NUM_DEVICES=$(( ${#DEVICES[@]} - 1 ))
NUM_INDEXES=$(( ${#INDEXES[@]} - 1 ))
NUM_SCRIPTS=$(( ${#SCRIPTS[@]} - 1 ))

if [ $NUM_SCRIPTS -ne $NUM_DEVICES -o $NUM_SCRIPTS -ne $NUM_INDEXES ]; then
	echo "${CONF} parse error" 1>&2
	exit 1
fi

for d in $(seq 0 $NUM_DEVICES); do
	echo "Generating PCR values for ${DEVICES[$d]}..."
	${SCRIPTS[$d]} -o ${NVPERMSFILE}
	if [ $? -ne 0 ]; then
		echo "${SCRIPTS[$d]} has failed."
		continue
	fi
	
	if [ $REPLACE -eq 0 ]; then
		echo "Migrating TPM NVRAM secret for ${DEVICES[$d]}..."
		MSG=$(tpm-luks -m -i ${INDEXES[$d]} -d ${DEVICES[$d]} -p ${NVPERMSFILE})
		if [ $? -ne 0 ]; then
			rm -f ${NVPERMSFILE}
			continue
		fi
		NEWINDEX=$(echo ${MSG} | awk -F " to index " '$1 ~ /Successfully/ { print $2 }')
		rm -f ${NVPERMSFILE}

		echo "# The following line generated by tpm-luks-update" >> ${CONF}
		echo "${DEVICES[$d]}:${NEWINDEX}:${SCRIPTS[$d]}" >> ${CONF}
		echo "Success. Updated ${CONF} for index ${INDEXES[$d]}."
	else 
		echo "Replace TPM NVRAM secret for ${DEVICES[$d]}..."

		LUKS_SECRET_FILE=$(tpm-luks -r -i ${INDEXES[$d]})
		
		if [ -s "$LUKS_SECRET_FILE" ]; then
			tpm_nvrelease -i ${INDEXES[$d]} -y
			MSG=$(tpm-luks -w $LUKS_SECRET_FILE -i ${INDEXES[$d]} -p ${NVPERMSFILE} ${OWNERPASS})
			
			if [ $? -ne 0 ]; then
				rm -f ${NVPERMSFILE}
				rm -f ${LUKS_SECRET_FILE}
				continue
			fi
			echo "Success. "
		else 
			echo "Secret returned from tpm_nvread is empty"
		fi

		rm -f ${LUKS_SECRET_FILE}
		rm -f ${NVPERMSFILE}
	fi
done

exit 0
